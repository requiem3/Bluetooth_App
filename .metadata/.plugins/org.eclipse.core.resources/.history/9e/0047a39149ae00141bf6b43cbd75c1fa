package com.example.bluetooth_app;

import android.bluetooth.BluetoothAdapter;
import android.content.Intent;
import android.content.IntentFilter;
import android.app.Activity;
import android.bluetooth.BluetoothDevice;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.widget.ArrayAdapter;

public class Bluetooth {
	private BluetoothAdapter mBluetoothAdapter;
	private Activity activity; //Activity to store main window's activity
	private IntentFilter filter;
    
	/**
	 * default constructor, initializes default bluetooth adapter.
	 */
	public Bluetooth(Activity activity) {
		this.activity = activity; //Set class activity to the activity passed to it by the main activity window
		mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
		
	    // Register for broadcasts when a device is discovered
	    filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);
	    this.registerReceiver(mReceiver, filter);

	    // Register for broadcasts when discovery has finished
	    filter = new IntentFilter(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);
	    this.registerReceiver(mReceiver, filter);
	}
	
	/**
	 * Check if bluetooth is enabled, if not enable it
	 */
	public boolean getAdapter() {
		if (!mBluetoothAdapter.isEnabled()) {
		    Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
		    activity.startActivityForResult(enableBtIntent, 1);
		}
		//TODO: check if enable was successful
		return true;
	}
	
	/**
	 * Check if device is bluetooth compatible
	 */
	public boolean isCompat() {
		if(mBluetoothAdapter == null) {
			return false; //TODO: better error handling
		} else {
			return true;
		}
	}
	
	/**
	 * Close some shit so we do not eat up resources
	 */
	public void destroy() { 
		if(mBluetoothAdapter != null) {
			mBluetoothAdapter.cancelDiscovery(); //cancel discovering devices
		}
	}
	
	/**
	 * Start discovering devices with bluetooth adapter
	 */
	public void startDiscovering() {
		if(mBluetoothAdapter.isDiscovering()) {
			mBluetoothAdapter.cancelDiscovery();
		}
		
		mBluetoothAdapter.startDiscovery();
	}
	
	private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();

            // When discovery finds a device
            if (BluetoothDevice.ACTION_FOUND.equals(action)) {
                // Get the BluetoothDevice object from the Intent
                BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                // If it's already paired, skip it, because it's been listed already
                if (device.getBondState() != BluetoothDevice.BOND_BONDED) {
                    mNewDevicesArrayAdapter.add(device.getName() + "\n" + device.getAddress());
                }
                // When discovery is finished, change the Activity title
            } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) {
                setProgressBarIndeterminateVisibility(false);
                setTitle(R.string.select_device);
                if (mNewDevicesArrayAdapter.getCount() == 0) {
                    String noDevices = getResources().getText(R.string.none_found).toString();
                    mNewDevicesArrayAdapter.add(noDevices);
                }
            }
        }
    };
	
}
